//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Tutorial.DataContractTutorial {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeDataContract", Namespace="MyNamespace")]
    [System.SerializableAttribute()]
    public partial class CompositeDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVC_Tutorial.DataContractTutorial.NamespaceDataContract CompositeContractField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVC_Tutorial.DataContractTutorial.NamespaceDataContract CompositeContract {
            get {
                return this.CompositeContractField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositeContractField, value) != true)) {
                    this.CompositeContractField = value;
                    this.RaisePropertyChanged("CompositeContract");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamespaceDataContract", Namespace="MyNamespace")]
    [System.SerializableAttribute()]
    public partial class NamespaceDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseKnownTypeDataContract", Namespace="http://schemas.datacontract.org/2004/07/WCF_Tutorial.DataContract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MVC_Tutorial.DataContractTutorial.KnownTypeDataContract))]
    public partial class BaseKnownTypeDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KnownTypeDataContract", Namespace="http://schemas.datacontract.org/2004/07/WCF_Tutorial.DataContract")]
    [System.SerializableAttribute()]
    public partial class KnownTypeDataContract : MVC_Tutorial.DataContractTutorial.BaseKnownTypeDataContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataContractTutorial.IIDataContractTutorial")]
    public interface IIDataContractTutorial {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIDataContractTutorial/DoWork", ReplyAction="http://tempuri.org/IIDataContractTutorial/DoWorkResponse")]
        void DoWork(MVC_Tutorial.DataContractTutorial.CompositeDataContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIDataContractTutorial/DoWork", ReplyAction="http://tempuri.org/IIDataContractTutorial/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync(MVC_Tutorial.DataContractTutorial.CompositeDataContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIDataContractTutorial/KnownTypeExample", ReplyAction="http://tempuri.org/IIDataContractTutorial/KnownTypeExampleResponse")]
        void KnownTypeExample(MVC_Tutorial.DataContractTutorial.BaseKnownTypeDataContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIDataContractTutorial/KnownTypeExample", ReplyAction="http://tempuri.org/IIDataContractTutorial/KnownTypeExampleResponse")]
        System.Threading.Tasks.Task KnownTypeExampleAsync(MVC_Tutorial.DataContractTutorial.BaseKnownTypeDataContract contract);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIDataContractTutorialChannel : MVC_Tutorial.DataContractTutorial.IIDataContractTutorial, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IDataContractTutorialClient : System.ServiceModel.ClientBase<MVC_Tutorial.DataContractTutorial.IIDataContractTutorial>, MVC_Tutorial.DataContractTutorial.IIDataContractTutorial {
        
        public IDataContractTutorialClient() {
        }
        
        public IDataContractTutorialClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IDataContractTutorialClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IDataContractTutorialClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IDataContractTutorialClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork(MVC_Tutorial.DataContractTutorial.CompositeDataContract contract) {
            base.Channel.DoWork(contract);
        }
        
        public System.Threading.Tasks.Task DoWorkAsync(MVC_Tutorial.DataContractTutorial.CompositeDataContract contract) {
            return base.Channel.DoWorkAsync(contract);
        }
        
        public void KnownTypeExample(MVC_Tutorial.DataContractTutorial.BaseKnownTypeDataContract contract) {
            base.Channel.KnownTypeExample(contract);
        }
        
        public System.Threading.Tasks.Task KnownTypeExampleAsync(MVC_Tutorial.DataContractTutorial.BaseKnownTypeDataContract contract) {
            return base.Channel.KnownTypeExampleAsync(contract);
        }
    }
}
